image: mcr.microsoft.com/dotnet/sdk:8.0

stages:
  - build
  - test
  - report
  - deploy

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

dotnet-test:
  stage: test
  services:
    - name: selenium/standalone-chrome:latest
      alias: selenium-standalone
  script:
    - dotnet restore
    - dotnet test StepikTesting.sln --logger "trx" --results-directory TestResults
  artifacts:
    when: always
    reports:
      junit:
        - TestResults/*.trx
    paths:
      - TestResults/
    expire_in: 1 week
  allow_failure: true

allure-report:
  image: openjdk:11-jdk
  stage: report
  before_script:
    - apt-get update && apt-get install -y wget unzip
    - wget https://github.com/allure-framework/allure2/releases/download/2.21.0/allure-2.21.0.zip
    - unzip allure-2.21.0.zip -d /opt/
    - ln -s /opt/allure-2.21.0/bin/allure /usr/local/bin/allure
  script:
    - allure generate TestResults --clean -o allure-report
    - |
      # Create Allure properties to configure screenshot display
      mkdir -p allure-report/data
      cat > allure-report/data/environment.json << EOF
      {
        "allure": {
          "directory": "allure-results",
          "links": [],
          "environment": {
            "runtime": "net8.0",
            "allure_version": "2.21.0",
            "specflow_version": "3.9.74"
          }
        }
      }
      EOF
  artifacts:
    paths:
      - allure-report/
    expire_in: 1 week
  dependencies:
    - dotnet-test

deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."